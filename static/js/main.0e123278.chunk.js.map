{"version":3,"sources":["serviceWorker.js","redux/reducers.js","redux/configureStore.js","redux/constants.redux.js","components/ErrorBoundaryComponent.js","components/functional-components/SearchComponent.js","components/functional-components/CardDetailComponent.js","components/functional-components/CardComponent.js","components/functional-components/ScrollComponent.js","components/functional-components/HeaderComponent.js","components/MainComponent.js","redux/actions.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","search","initialStateforRobots","robots","isPending","middlewares","push","thunkMiddleware","rootReducer","combineReducers","searchARobot","arguments","length","undefined","action","type","Object","assign","payload","requestRobotsReducer","ErrorBoundary","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasErr","info","concat","setState","react_default","a","createElement","className","children","Component","Search","_ref","searchChange","htmlFor","aria-label","id","name","placeholder","onChange","CardDetail","choice","number","robot","style","margin","alt","src","slice","username","address","suite","street","city","zipcode","phone","email","company","website","Math","floor","random","Card","map","react_router_dom","key","to","onClick","react_router","exact","path","component","CardDetailComponent","Scroll","Header","title","Main","loading","onRequestRobots","_this$state","_this$props","onSearchChange","filterRobots","filter","toLowerCase","includes","HeaderComponent","SearchComponent","pointerEvent","opacity","ErrorBoundaryComponent","ScrollComponent","CardComponent","connect","dispatch","event","target","value","dispath","fetch","response","json","data","store","createStore","applyMiddleware","apply","ReactDOM","render","es","MainComponent","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0e123278.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { \r\n    changeSearchField,\r\n    requestRobots_Pending,\r\n    requestRobots_Success,\r\n    requestRobots_Failed\r\n } from './constants.redux';\r\n\r\nexport const initialState = {\r\n    search: \"\",\r\n};\r\n\r\nexport const searchARobot = (state = initialState, action= {}) => {\r\n    switch(action.type) {\r\n        case changeSearchField:\r\n            return Object.assign({}, state, {search: action.payload});\r\n            // or return { ...state, search: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initialStateforRobots = {\r\n    robots: [],\r\n    isPending: false,\r\n    error: ''\r\n};\r\n\r\nexport const requestRobotsReducer = (state = initialStateforRobots, action = {}) => {\r\n    switch(action.type) {\r\n        case requestRobots_Pending:\r\n            return Object.assign({}, state, { isPending: true });\r\n        case requestRobots_Success:\r\n            return Object.assign({}, state, { robots: action.payload, isPending: false });\r\n        case requestRobots_Failed:\r\n            return Object.assign({}, state, { error: action.payload, isPending: false });\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\n// import { createLogger } from 'redux-logger';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { searchARobot, requestRobotsReducer } from './reducers';\r\n\r\n// const logger = createLogger();\r\nconst middlewares = [];\r\n\r\nif (process.env.NODE_ENV === `development`) {\r\n    const { logger } = require(`redux-logger`);\r\n   \r\n    middlewares.push(logger);\r\n}\r\n\r\nmiddlewares.push(thunkMiddleware);\r\n\r\nconst rootReducer = combineReducers({ searchARobot, requestRobotsReducer });\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        rootReducer, // our root reducer\r\n        applyMiddleware(...middlewares)\r\n    );\r\n\r\n    return store;\r\n};","export const changeSearchField = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const requestRobots_Pending = 'REQUEST_ROBOTS_PENDING';\r\nexport const requestRobots_Success = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const requestRobots_Failed = 'REQUEST_ROBOTS_FAILED';","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasErr: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(`error here ${error}`);\r\n        console.log(`info here ${info}`);\r\n        this.setState({ hasErr: true });\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasErr) {\r\n            return (\r\n                <div>\r\n                    <h1 className=\"tc f1 lh-copy\">Ooops. That didn't work.</h1>\r\n                </div>\r\n            )\r\n        }\r\n        return this.props.children;\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\n\r\nimport '../../component-styles/SearchComponentStyle.css';\r\n\r\nconst Search = ({ searchChange }) => {\r\n\r\n    return (\r\n        <div className=\"tc pa2\">\r\n            <label htmlFor=\"searchrobot\" className=\"visuallyhidden\">SearchRobot</label>\r\n            <input \r\n                className=\"pa3 mb4 br-pill ba b--light-green bg-washed-green\"\r\n                aria-label=\"searchrobot\"\r\n                type=\"search\"\r\n                id=\"searchrobot\"\r\n                name=\"searchrobot\" \r\n                placeholder=\"search a cool robot\" \r\n                onChange={searchChange}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nconst CardDetail = ({ robots, choice, number }) => {\r\n  if (choice > 0 && choice < 11) {\r\n    let robot = robots[choice - 1];\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"overthepage bg-washed-green dib br3 pa2 mv3 mh2 bw1 shadow-5 bg-animate w-70\"\r\n          style={{ margin: \"0 auto\" }}\r\n        >\r\n          <div className=\"tc\">\r\n            <img\r\n              className=\"w-100\"\r\n              alt={robot.name}\r\n              src={`https://robohash.org/${\r\n                robot.id\r\n              }?size=300x300&set=set${number}`}\r\n            />\r\n            <h1 className=\"f4\">{`${robot.name.slice(0, 20)} (@${\r\n              robot.username\r\n            })`}</h1>\r\n            <hr className=\"mw3 bb bw1 b--black-10\" />\r\n          </div>\r\n          <p className=\"lh-copy measure center f5 black-90\">\r\n            <span className=\"underline\">{`${robot.name.slice(0, 20)}`}</span>\r\n            {`, famously known by username `}\r\n            <span className=\"underline\">@{`${robot.username}`}</span>\r\n            {` is a resident of ${robot.address.suite}, ${\r\n              robot.address.street\r\n            } in ${robot.address.city} with zip-code `}\r\n            <span className=\"underline\">{`${robot.address.zipcode}`}</span>\r\n            {`. He can be contacted at phone number: `}\r\n            <span className=\"underline\">{`${robot.phone}`}</span>\r\n            {` or at email: `}\r\n            <span className=\"underline\">{`${robot.email}`}</span>\r\n            {`. He currently works at ${\r\n              robot.company.name\r\n            }. He owns a nice website `}\r\n            <span className=\"underline\">{`${robot.website}</span>`}`</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <div\r\n          className=\"overthepage bg-washed-green dib br3 pa2 mv3 mh2 grow bw1 shadow-5 bg-animate hover-bg-light-green w-60\"\r\n          style={{ margin: \"0 auto\" }}\r\n        >\r\n          <p>That's not in our database</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CardDetail;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport CardDetail from \"./CardDetailComponent\";\r\n\r\nimport \"../../component-styles/CardComponentStyle.css\";\r\n\r\nconst number = Math.floor(Math.random() * 3) + 1;\r\n\r\nlet choice = null;\r\n\r\nconst assignChoice = id => {\r\n  choice = id;\r\n};\r\n\r\nconst Card = props => {\r\n  const robots = props.robots.map(robot => {\r\n    return (\r\n      <Link\r\n        key={robot.id}\r\n        to={`https://mikr13.github.io/RoboFriends/Robot/${robot.id}`}\r\n        onClick={() => assignChoice(robot.id)}\r\n      >\r\n        <div className=\"bg-washed-green dib br3 pa2 mv3 mh2 grow bw1 shadow-5 bg-animate hover-bg-light-green\">\r\n          <img\r\n            className=\"w-100\"\r\n            alt={robot.name}\r\n            src={`https://robohash.org/${\r\n              robot.id\r\n            }?size=300x300&set=set${number}`}\r\n          />\r\n          <div>\r\n            <h2>{robot.name.slice(0, 20)}</h2>\r\n            <p>{robot.email}</p>\r\n            <p>\r\n              <b>{robot.username}</b>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <div className=\"w-90 tc\" style={{ margin: \"0 auto\" }}>\r\n          {robots}\r\n        </div>\r\n        {robots.length ? (\r\n          <Route exact path=\"RoboFriends/Robot/:robotID\"\r\n            component={() => (\r\n              <CardDetail\r\n                robots={props.robots}\r\n                choice={choice}\r\n                number={number}\r\n              />\r\n            )}\r\n          />\r\n        ) : (\r\n          <Redirect path=\"RoboFriends/Robot/:robotID\" to=\"https://mikr13.github.io/RoboFriends/\" />\r\n        )}\r\n        <Route to=\"https://mikr13.github.io/RoboFriends/\" />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport '../../component-styles/ScrollComponentStyle.css';\r\n\r\n\r\nconst Scroll = (props) => {\r\n\r\n// Scroll will use children that is 3rd feature in list of props and state\r\n\r\n    return (\r\n        <div className=\"scroll\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from \"react\";\r\n\r\nconst Header = props => {\r\n  if (props.isPending) {\r\n    return <h1 className=\"tc f-subheadline lh-copy\">{props.title}</h1>;\r\n  } else {\r\n    return <h1 className=\"tc f2 lh-copy\">{props.title}</h1>;\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setSearchField, requestRobots } from \"../redux/actions\";\r\n\r\nimport \"../component-styles/MainComponentStyle.css\";\r\n\r\nimport ErrorBoundary from \"./ErrorBoundaryComponent\";\r\nimport Search from \"./functional-components/SearchComponent\";\r\nimport Card from \"./functional-components/CardComponent\";\r\nimport Scroll from \"./functional-components/ScrollComponent\";\r\nimport Header from \"./functional-components/HeaderComponent\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    search: state.searchARobot.search,\r\n    robots: state.requestRobotsReducer.robots,\r\n    isPending: state.requestRobotsReducer.isPending,\r\n    error: state.requestRobotsReducer.error\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestRobots())\r\n  };\r\n};\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"Welcome to RoboFriends\",\r\n      loading: \"Waiting for all the cool robots to come here....\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRequestRobots();\r\n  }\r\n\r\n\r\n  render() {\r\n    const { loading, title } = this.state;\r\n\r\n    const { robots, search, onSearchChange, isPending, error } = this.props;\r\n\r\n    const filterRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n\r\n    if (isPending) {\r\n      return (\r\n        <div className=\"pa2\">\r\n          <Header isPending={isPending} title={title} />\r\n          <h1 className=\"tc f3 mt6 pa4\">{loading}</h1>\r\n        </div>\r\n      );\r\n    } else if (error) {\r\n      return (\r\n        <div className=\"pa2\">\r\n          <Header isPending={isPending} title={title} />\r\n          <Search style={{pointerEvent: 'none', opacity: '0.5'}} />\r\n          <h1 className=\"tc f3 mt6 pa6\">There's no fun in being offline, come online and make some RoboFriends!</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"pa2\">\r\n          <ErrorBoundary>\r\n            <Header isPending={isPending} title={title} />\r\n            <Search searchChange={onSearchChange} />\r\n            <Scroll>\r\n              <Card robots={filterRobots} />\r\n            </Scroll>\r\n          </ErrorBoundary>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import { \r\n    changeSearchField,\r\n    requestRobots_Pending,\r\n    requestRobots_Success,\r\n    requestRobots_Failed\r\n } from './constants.redux';\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: changeSearchField,\r\n    payload: text\r\n});\r\n\r\nexport const requestRobots = () => (dispath) => {\r\n    dispath({ type: requestRobots_Pending});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(data => dispath({ type: requestRobots_Success, payload: data }))\r\n        .catch(error => dispath({ type: requestRobots_Failed, payload: error }));\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport { ConfigureStore } from './redux/configureStore';\n\nimport './index.css';\nimport 'tachyons';\n\nimport Main from './components/MainComponent';\n\nconst store = ConfigureStore();\n\nReactDOM.render(<Provider store={ store }><Main/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}